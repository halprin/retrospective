"""
Django settings for retrospective project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from corsheaders.defaults import default_headers

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Environment this application is deployed in

ENVIRONMENT = os.getenv('ENVIRONMENT', 'prod')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['localhost', '127.0.0.1', '[::1]', os.getenv('ALLOWED_HOST')]
if ENVIRONMENT == 'dev' or ENVIRONMENT == 'test':
    ALLOWED_HOSTS.append('*')

# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'channels',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'backend.retrospective.urls'

WSGI_APPLICATION = 'backend.retrospective.wsgi.application'

ASGI_APPLICATION = 'backend.retrospective.routing.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [(os.getenv('MESSAGE_BROKER'), 6379)],
            'prefix': ENVIRONMENT,
        },
    },
}


# Security
SECURE_CONTENT_TYPE_NOSNIFF = True

SECURE_BROWSER_XSS_FILTER = True


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# CORS

CORS_ORIGIN_ALLOW_ALL = (ENVIRONMENT == 'dev' or ENVIRONMENT == 'test')

CORS_ORIGIN_WHITELIST = [os.getenv('ALLOWED_HOST', 'localhost:4200')]

CORS_ALLOW_HEADERS = default_headers + (
    'Api-Version',
)
